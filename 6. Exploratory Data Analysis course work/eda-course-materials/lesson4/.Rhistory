data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point(alpha = 0.05) +
geom_smooth(mapping = 'lm', color = 'red') +
xlim(0, quantile(pf$likes_received, 0.95)) +
ylim(0, quantile(pf$www_likes_received, 0.95))
ggplot(
data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point(alpha = 0.05) +
xlim(0, quantile(pf$likes_received, 0.95)) +
ylim(0, quantile(pf$www_likes_received, 0.95)) +
geom_smooth(mapping = 'lm', color = 'red')
ggplot(
data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point() +
xlim(0, quantile(pf$likes_received, 0.95)) +
ylim(0, quantile(pf$www_likes_received, 0.95)) +
geom_smooth(mapping = 'lm', color = 'red')
ggplot(
data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point(alpha = 0.05) +
xlim(0, quantile(pf$likes_received, 0.95)) +
ylim(0, quantile(pf$www_likes_received, 0.95))
ggplot(
data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point(alpha = 0.05) +
geom_smooth(mapping = 'lm', color = 'red') +
coord_cartesian(
xlim = c(0, quantile(pf$likes_received, 0.95)),
ylim = c(0, quantile(pf$www_likes_received, 0.95))
)
ggplot(
data = pf,
aes(x = likes_received, y = www_likes_received)
) +
geom_point(alpha = 0.05) +
coord_cartesian(
xlim = c(0, quantile(pf$likes_received, 0.95)),
ylim = c(0, quantile(pf$www_likes_received, 0.95))
)
corr.test(
x = pf$www_likes_received,
y = pf$likes_received
)
cor.test(
x = pf$www_likes_received,
y = pf$likes_received
)
quantile(pf$www_likes_received, 0.95)
subset(pf, www_likes_received >= quantile(pf$www_likes_received, 0.95))$www_likes_received
cor.test(
x = subset(pf, www_likes_received >= quantile(pf$www_likes_received, 0.95))$www_likes_received,
y = subset(pf, likes_received >= quantile(pf$likes_received, 0.95))$likes_received
)
cor.test(
x = pf$www_likes_received,
y = pf$likes_received
)
install.packages('alr3')
library(alr3)
data("Mitchell")
?Mitchell
head(Mitchell)
ggplot(
data = Mitchell,
aes(x = Month, y = Temp)
) +
geom_point()
ggplot(
data = Mitchell,
aes(x = Month, y = Temp)
) +
geom_point(alpha = 0.5)
cor.test(
x = Mitchell$Month,
y = Mitchell$Temp
)
###: TODO wrap plot ###
ggplot(
data = Mitchell,
aes(x = Month, y = Temp)
) +
geom_point(alpha = 0.5)
?rnorm
?cumsum
?rnorm
?cumsum
cumsum(1:10)
?scale_x_continuous
?oob
scale_x_continuous(?oob)
###: TODO wrap plot ###
ggplot(
data = Mitchell,
aes(
x = Month %% 12,
y = Temp
)
) +
geom_point(alpha = 0.5)
names(pf)
pf$age + (1 - pf$dob_month / 12)
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
ggplot(
data = pf,
aes(x = age_with_months, y = friend_count)
) +
geom_point()
ggplot(
data = pf,
aes(x = age_with_months, y = friend_count)
) +
geom_line()
ggplot(
data = pf,
aes(x = age_with_months, y = friend_count)
) +
geom_line(stat = 'summary', fun.y = mean)
pf$age_with_months <- pf$age + (12 - pf$dob_month / 12)
ggplot(
data = pf,
aes(x = age_with_months, y = friend_count)
) +
geom_line(stat = 'summary', fun.y = mean)
by(pf$age_with_months, pf$friend_count)
by(pf$age_with_months, pf$friend_count, mean)
by(pf$friend_count, pf$age_with_months, mean)
pf$age_with_months <- pf$age + (1 - pf$dob_month / 12)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
summarise(
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()
)
pf.fc_by_age_months <- pf %>%
group_by(age_with_months) %>%
arrange(age_with_months) %>%
summarise(
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()
)
pf.fc_by_age_months <- pf %>%
arrange(age_with_months) %>%
group_by(age_with_months) %>%
summarise(
friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()
)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line()
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line() +
xlim(0, 71)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line() +
xlim(13, 71)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line() +
xlim(13, 71) +
ylim(0, 500)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line() +
xlim(13, 71) +
ylim(0, 450)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line() +
geom_smooth() +
xlim(13, 71) +
ylim(0, 450)
ggplot(
data = pf.fc_by_age_months,
aes(x = age_with_months, y = friend_count_mean)
) +
geom_line(color = 'orange') +
geom_smooth() +
xlim(13, 71) +
ylim(0, 450)
library(ggplot2)
data("diamonds")
names(diamonts)
names(diamonds)
ggplot(
data = diamonds,
aes(x = x, y = price)
) +
geom_point(alpha = 0.3)
ggplot(
data = diamonds,
aes(x = x, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = diamonds,
aes(x = x, y = price)
) +
geom_point(color = "orange", alpha = 0.1)
ggplot(
data = diamonds,
aes(x = x, y = price)
) +
geom_point(color = "orange", alpha = 0.05)
ggplot(
data = diamonds,
aes(x = x, y = price)
) +
geom_point(color = "orange", alpha = 0.1)
?cor.test
cor.test(x = diamonds$x, y = diamonds$price)
cor.test(x = diamonds$y, y = diamonds$price)
cor.test(x = diamonds$z, y = diamonds$price)
ggplot(
data = diamonds,
aes(x = depth, y = price)
) +
geom_point(color = "orange", alpha = 0.1)
ggplot(
data = diamonds,
aes(x = depth, y = price)
) +
geom_point(color = "orange", alpha = 0.01)
ggplot(
data = diamonds,
aes(x = depth, y = price)
) +
geom_point(color = "orange", alpha = 0.01) +
scale_x_continuous(breaks = seq(50, 70, 2))
cor.test(x = diamonds$depth, y = diamonds$price)
ggplot(
data = diamonds,
aes(x = carat, y = price)
) +
geom_point(color = "orange", alpha = 0.1)
ggplot(
data = diamonds,
aes(x = carat, y = price)
) +
geom_point(color = "orange", alpha = 0.1) +
coord_cartesian(
xlim = c(0, quantile(diamonds$carat, 0.99))
)
ggplot(
data = diamonds,
aes(x = carat, y = price)
) +
geom_point(color = "orange", alpha = 0.1) +
coord_cartesian(
xlim = c(0, quantile(diamonds$carat, 0.99)),
breaks = seq(0, quantile(diamonds$carat, 0.99), 0.2)
)
ggplot(
data = diamonds,
aes(x = carat, y = price)
) +
geom_point(color = "orange", alpha = 0.1) +
coord_cartesian(
xlim = c(0, quantile(diamonds$carat, 0.99))
) +
scale_x_continuous(breaks = seq(0, quantile(diamonds$carat, 0.99), 0.2))
ggplot(
data = diamonds,
aes(x = carat, y = price)
) +
geom_point(color = "orange", alpha = 0.1) +
coord_cartesian(
xlim = c(0, quantile(diamonds$carat, 0.99))
) +
scale_x_continuous(breaks = seq(min(diamonds$carat), quantile(diamonds$carat, 0.99), 0.2))
ggplot(
data = diamonds,
aes(x = x * y * z, y = price)
) +
geom_point(alpha = 0.1)
diamonds$cubic.volume = diamonds$x * diamonds$y * diamonds$z
ggplot(
data = diamonds,
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800)
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.05, color = "orangge")
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.05, color = "orange")
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.01, color = "orange")
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.01)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
cor.test(
x = subset(diamonds, cubic.volume > 0 & cubic.volume < 800)$cubic.volume,
y = subset(diamonds, cubic.volume > 0 & cubic.volume < 800)$price
)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1, color = "orange") +
geom_smooth()
library(dplyr)
?by
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(
mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()
)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
ggplot(
aes(x = diamonds_by_clarity)
) + geom_bar()
ggplot(
aes(x = diamonds_mp_by_clarity)
) +
geom_bar()
ggplot(
data = diamonds_mp_by_clarity,
aes(x = clarity, mean_price)
) +
geom_bar()
ggplot(
data = diamonds_mp_by_clarity,
aes(x = clarity, y = mean_price)
) +
geom_bar()
ggplot(
data = diamonds_mp_by_clarity,
aes(mean_price)
) +
geom_bar()
ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar()
ggplot(
data = diamonds,
aes(clarity)
) +
geom_bar()
ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar(aes(weight = mean_price))
ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar(aes(weight = mean_price))
clarity.bar <- ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar(aes(weight = mean_price))
color.bar <- ggplot(
data = diamonds_mp_by_color,
aes(color)
) +
geom_bar(aes(weight = mean_price))
grid.arrange(clarity.bar, color.bar)
library(gridExtra)
grid.arrange(clarity.bar, color.bar)
?diamonds
str(diamonds$color)
levels(diamonds$color)
levels(diamonds$clarity)
str(diamonds$clarity)
Ord.factor(diamonds$color)
factor(diamonds$color)
factor(diamonds$color, ordered = T)
arrange(diamonds, color)
str(diamonds$color)
levels(diamonds$color)
reverse(levels(diamonds$color))
rev(levels(diamonds$color))
ordered(diamonds$color)
ordered(diamonds$color, levels = rev(levels(diamonds$color)))
ordered(diamonds$color, levels = rev(levels(diamonds$color)))
diamonds$color <- ordered(diamonds$color, levels = rev(levels(diamonds$color)))
str(diamonds$color)
c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF")
ordered(diamonds$clarity, levels = rev(levels(c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))))
ordered(diamonds$clarity, levels = c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
diamonds$clarity <- ordered(diamonds$clarity, levels = c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
str(diamonds$color)
levels(diamonds$color)
c("J", "I", "H", "G", "F", "E", "D")
diamonds$color <- ordered(diamonds$color, levels = c("J", "I", "H", "G", "F", "E", "D"))
clarity.bar <- ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar(aes(weight = mean_price))
color.bar <- ggplot(
data = diamonds_mp_by_color,
aes(color)
) +
geom_bar(aes(weight = mean_price))
grid.arrange(clarity.bar, color.bar)
diamonds$color <- ordered(diamonds$color, levels = c("J", "I", "H", "G", "F", "E", "D"))
diamonds$clarity <- ordered(diamonds$clarity, levels = c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
clarity.bar <- ggplot(
data = diamonds_mp_by_clarity,
aes(clarity)
) +
geom_bar(aes(weight = mean_price))
color.bar <- ggplot(
data = diamonds_mp_by_color,
aes(color)
) +
geom_bar(aes(weight = mean_price))
grid.arrange(clarity.bar, color.bar)
ggplot(
data = diamonds,
aes(x = depth, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = diamonds,
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 800),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 600),
aes(x = cubic.volume, y = price)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 600),
aes(x = cubic.volume, y = clarity)
) +
geom_point(alpha = 0.1)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 600),
aes(x = cubic.volume, y = clarity)
) +
geom_point(alpha = 0.01)
ggplot(
data = subset(diamonds, cubic.volume > 0 & cubic.volume < 600),
aes(x = cubic.volume, y = color)
) +
geom_point(alpha = 0.01)
